#!/usr/bin/env python3

# SPDX-FileCopyrightText: TNG Technology Consulting GmbH <https://www.tngtech.com>
#
# SPDX-License-Identifier: Apache-2.0
import logging
import sys
from pathlib import Path

import click

from opossum_lib.core.services.generate_impl import (
    generate_impl,
)
from opossum_lib.core.services.input_reader import InputReader
from opossum_lib.input_formats.opossum.services.opossum_file_reader import (
    OpossumFileReader,
)
from opossum_lib.input_formats.owasp_dependency_scan.services.owasp_dependency_scan_file_reader import (  # noqa: E501
    OwaspDependencyScanFileReader,
)
from opossum_lib.input_formats.scancode.services.scancode_file_reader import (
    ScancodeFileReader,
)


@click.group()
def opossum_file() -> None:
    pass


@opossum_file.command()
@click.option(
    "--opossum",
    "opossum_files",
    help="Specify a path to a .opossum file that you would like to "
    + "include in the final output. Option can be repeated.",
    multiple=True,
    type=click.Path(exists=True),
)
@click.option(
    "--scan-code-json",
    "scancode_json_files",
    help="Specify a path to a .json file generated by ScanCode that you would like to "
    + "include in the final output. Option can be repeated.",
    multiple=True,
    type=click.Path(exists=True),
)
@click.option(
    "--owasp-json",
    "owasp_dependency_scan_files",
    help="Specify a path to a .json file generated by OWASP dependency scan "
    + "that you would like to "
    + "include in the final output. Option can be repeated.",
    multiple=True,
    type=click.Path(exists=True),
)
@click.option(
    "--outfile",
    "-o",
    default="output.opossum",
    show_default=True,
    help="The file path to write the generated opossum document to. "
    'If appropriate, the extension ".opossum" is appended. '
    "If the output file already exists, it is overwritten.",
)
def generate(
    scancode_json_files: list[Path],
    opossum_files: list[Path],
    owasp_dependency_scan_files: list[Path],
    outfile: Path,
) -> None:
    """
    Generate an Opossum file from various other file formats.
    If multiple files are provided, they are merged into a single output file.

    \b
    Currently supported input formats:
      - ScanCode (json)
      - Opossum
      - OWASP Dependency Scan (json)
    """

    total_number_of_files = (
        len(scancode_json_files) + len(opossum_files) + len(owasp_dependency_scan_files)
    )
    if total_number_of_files == 0:
        logging.warning("No input provided. Exiting.")
        sys.exit(0)
    input_readers: list[InputReader] = []
    input_readers += [ScancodeFileReader(path=path) for path in scancode_json_files]
    input_readers += [OpossumFileReader(path=path) for path in opossum_files]
    input_readers += [
        OwaspDependencyScanFileReader(path=path) for path in owasp_dependency_scan_files
    ]

    generate_impl(input_readers=input_readers, output_file=Path(outfile))


if __name__ == "__main__":
    opossum_file()
