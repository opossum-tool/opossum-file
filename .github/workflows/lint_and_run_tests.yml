# SPDX-FileCopyrightText: TNG Technology Consulting GmbH <https://www.tngtech.com>
#
# SPDX-License-Identifier: Apache-2.0

name: Lint and Test
on:
  push:
    branches:
      - main
      - feat-improve-distribution # TEMP: only for debug purposes
      - 'renovate/*'
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

jobs:
  linter:
    runs-on: ${{ matrix.os }}
    if: |
      !(github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/'))
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install the project
        run: uv sync --locked

      - name: Run Ruff linter
        run: uv run ruff check

      - name: Run Ruff formatter
        run: uv run ruff format --check

      - name: Run mypy
        run: uv run python -m mypy src/ tests/

  test:
    runs-on: ${{ matrix.os }}
    if: |
      !(github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/'))
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install the project
        run: uv sync --locked

      - name: Run tests
        run: uv run pytest
  
  test-build:
    needs: [linter, test]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.13']
        include:
          - os: ubuntu-latest
            executable-name: converter
            artifact-name: ubuntu-converter
          - os: windows-latest
            executable-name: converter.exe
            artifact-name: windows-converter
          - os: macos-latest
            executable-name: converter
            artifact-name: macos-converter
    uses: ./.github/workflows/build_executable.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      executable-name: ${{ matrix.executable-name }}
      artifact-name: ${{ matrix.artifact-name }}

  
  try-download:
    runs-on: ubuntu-latest
    needs: test-build

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.13
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install the project
        run: uv sync --locked
      
      - uses: actions/download-artifact@v4
        with:
          name: ubuntu-converter
      
      - run: chmod +x converter && ./converter generate --spdx tests/data/SPDX.spdx && test -s "output.opossum" || exit 1
