# SPDX-FileCopyrightText: TNG Technology Consulting GmbH <https://www.tngtech.com>
#
# SPDX-License-Identifier: Apache-2.0

name: Build Executable
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      python-version:
        required: true
        type: string
      executable-name:
        required: true
        type: string
      artifact-name:
        required: true
        type: string

jobs:
  build-executable:
    runs-on: ${{ inputs.os }}
    if: |
      !(github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/'))
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ inputs.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install the project
        run: uv sync --locked

      - name: Install PyInstaller
        run: uv pip install pyinstaller

      - name: Find site package directory
        run: echo "sitepackage_dir=$(python -c "import site; print(site.getsitepackages()[-1])")" >> $GITHUB_ENV
        # On ubuntu/macos, getsitepackages returns a list with only one element, on windows a list with two elements is returned where the second is correct.

      - name: Build executable
        run: uv run pyinstaller --name ${{ inputs.executable-name }} --onefile --add-data "$sitepackage_dir/license_expression/data/scancode-licensedb-index.json:./license_expression/data" --add-data "$sitepackage_dir/spdx_tools/spdx/parser/tagvalue/*:./spdx_tools/spdx/parser/tagvalue" -o  src/opossum_lib/cli.py
      
      - name: Test executable
        run: dist/${{ inputs.executable-name }} generate --spdx tests/data/SPDX.spdx && test -s "output.opossum" || exit 1

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: dist/${{ inputs.executable-name }}
