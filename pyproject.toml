# SPDX-FileCopyrightText: TNG Technology Consulting GmbH <https://www.tngtech.com>
#
# SPDX-License-Identifier: Apache-2.0
[project]
name = "opossum-file"
version = "0.1"
description = "A cli tool for handling Opossum files"
requires-python = ">=3.13.3,<4"
readme = "README.md"
license = { file = "LICENSE" }
dependencies = ["click>=8.2.1,<9", "packageurl-python>=0.17.1", "pydantic>=2.11.7"]

[project.urls]
Repository = "https://github.com/opossum-tool/opossum-file"

[project.scripts]
opossum-file = "opossum_lib.cli:opossum_file"

[dependency-groups]
test = ["pytest>=8.4.0,<9", "faker>=37.4.0"]
dev = [
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "ruff>=0.11.13",
    "import-linter>=2.3",
    "mdformat>=0.7.22",
    "mdformat-config>=0.2.1",
    "mdformat-gfm>=0.4.1",
    "reuse>=5.0.2",
    "taskipy>=1.14.1",
    "pyinstaller>=6.14.1"
]

[tool.uv]
default-groups = ["test", "dev"]
package = true

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = 'src:tests'
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ['networkx.*', 'license_expression.*']
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # naming
    "N",
]
extend-select = ["E501"]

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true

[tool.taskipy.settings]
cwd = "."
runner = "uv run"

[tool.taskipy.tasks]
lint = "task lint-python && task lint-imports && task reuse"
lint-fix = "task lint-python-fix && task lint-imports && task reuse"
format = "task format-python && task format-markdown"
format-fix = "task format-python-fix && task format-markdown-fix"
verify = "task lint && task format && task typecheck && task test"
verify-fix = "task lint-fix && task format-fix && task typecheck && task test"

lint-python = "ruff check"
lint-python-fix = "ruff check --fix"
reuse="reuse lint"
lint-imports = "lint-imports"
format-python = "ruff format --check"
format-python-fix = "ruff format"
format-markdown = "mdformat ."
format-markdown-fix = "mdformat . --check"
typecheck="python -m mypy src/ tests/"
test="pytest"
